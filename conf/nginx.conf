
#user  nobody;
# off 单进程，方便调试
# master_process off;
master_process off;
worker_processes auto;
daemon off;
error_log  logs/error.log info;
error_log  /dev/stdout  info;

#error_log  "pipe:rollback logs/error_log interval=1d baknum=7 maxsize=2G";

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    upstream node_ups {
        server 127.0.0.1:8080;
    }
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    # iplist_path ../ipblock.txt;
    # error_log  logs/error.log debug;
    helloworld hi_main;
    server {
        listen       1888;
        server_name  localhost;
        helloworld hi_server;
        location / {
            helloworld hi_location;
            root   html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        location /foo {
            root   html;
        }
        location /cc-api {
           cc_filter_server;
        }
        location /node {
            proxy_pass http://node_ups;
        }
    }
    ssl_prefer_server_ciphers on;
    # https://github.com/rustls/rustls-openssl-compat/issues/27
    # ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
    ssl_session_cache off;
    ssl_session_timeout  5m;
    ssl_protocols TLSv1.3;
    ssl_verify_client off;
    access_log off;
    ssl_certificate      ../certificates/www.example.org.full.cert.pem;
    ssl_certificate_key  ../certificates/www.example.org.key.pem;
    server {
       listen       1443 reuseport ssl default;

       location /cc-api {
           cc_filter_server;
       }
       location / {
            add_header Content-Type  text/plain;
            return 200;
        }
        location /1k {
            add_header Content-Type  text/plain;
            try_files /1k.txt =404;
        }
        location /10k {
            add_header Content-Type  text/plain;
            try_files /10k.txt =404;
        }
        location /1m {
            add_header Content-Type  text/plain;
            try_files /1m.txt =404;
        }
        location /10m {
            add_header Content-Type  text/plain;
            try_files /10m.txt =404;
        }
    }
    server {
        listen 1444 reuseport default;
        location / {
            add_header Content-Type  text/plain;
            return 200;
        }
        location /1k {
            add_header Content-Type  text/plain;
            try_files /1k.txt =404;
        }
        location /10k {
            add_header Content-Type  text/plain;
            try_files /10k.txt =404;
        }
        location /1m {
            add_header Content-Type  text/plain;
            try_files /1m.txt =404;
        }
        location /10m {
            add_header Content-Type  text/plain;
            try_files /10m.txt =404;
        }
    }
}